name: CI-CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  RG_NAME:          adogithubtf-rg
  LOCATION:         uksouth
  ACR_SUFFIX:       adogithubtf
  IMAGE_NAME:       ado-github-terraform-demo
  ACR_LOGIN_SERVER: acradogithubtf.azurecr.io

jobs:

  deploy-infra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ‚Üê Add this step to install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 'latest'

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -input=false

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve \
            -var "rg_name=${{ env.RG_NAME }}" \
            -var "location=${{ env.LOCATION }}" \
            -var "acr_suffix=${{ env.ACR_SUFFIX }}" \
            -var "image_name=${{ env.IMAGE_NAME }}"

  build-push:
    name: Build & Push Docker Image
    needs: deploy-infra
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username:     ${{ secrets.ACR_USERNAME }}
          password:     ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push Image
        run: |
          docker build \
            -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest \
            ./app
          docker push \
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
